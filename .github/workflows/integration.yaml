name: CI

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**/*.rst'
      - '**/*.md'
    branches:
      - master
      - '[0-9].[0-9]'
  pull_request:
    branches:
      - master
      - '[0-9].[0-9]'
  schedule:
    - cron: '0 1 * * *' # nightly build

concurrency:
  group: ${{ github.event.pull_request.number || github.ref }}-integration
  cancel-in-progress: true

permissions:
  contents: read  #  to fetch code (actions/checkout)

env:
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  # this speeds up coverage with Python 3.12: https://github.com/nedbat/coveragepy/issues/1665
  COVERAGE_CORE: sysmon
  # patch releases get included in the base version image when they are published
  # for example after 8.2.1 is published, 8.2 image contains 8.2.1 content
  CURRENT_CLIENT_LIBS_TEST_STACK_IMAGE_TAG: '8.2'
  CURRENT_REDIS_VERSION: '8.2'

jobs:

  redis_version:
    runs-on: ubuntu-latest
    outputs:
      CURRENT: ${{ env.CURRENT_REDIS_VERSION }}
    steps:
      - name: Compute outputs
        run: |
          echo "CURRENT=${{ env.CURRENT_REDIS_VERSION }}" >> $GITHUB_OUTPUT

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: redis_version
    strategy:
      max-parallel: 15
      fail-fast: false
      matrix:
        redis-version: ['${{ needs.redis_version.outputs.CURRENT }}']
        python-version: ['3.9']
        parser-backend: ['plain']
        event-loop: ['asyncio']
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    name: Redis ${{ matrix.redis-version }}; Python ${{ matrix.python-version }}; RESP Parser:${{matrix.parser-backend}}; EL:${{matrix.event-loop}}
    steps:
      - uses: actions/checkout@v5
      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
            python-version: ${{ matrix.python-version }}
            parser-backend: ${{ matrix.parser-backend }}
            redis-version: ${{ matrix.redis-version }}

  python-compatibility-tests:
    runs-on: ubuntu-latest
    needs: [ redis_version ]
    timeout-minutes: 60
    strategy:
      max-parallel: 15
      fail-fast: false
      matrix:
        redis-version: [ '${{ needs.redis_version.outputs.CURRENT }}' ]
        python-version: ['pypy-3.9', 'pypy-3.10']
        parser-backend: [ 'plain' ]
        event-loop: [ 'asyncio' ]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    name: Redis ${{ matrix.redis-version }}; Python ${{ matrix.python-version }}; RESP Parser:${{matrix.parser-backend}}; EL:${{matrix.event-loop}}
    steps:
      - uses: actions/checkout@v5
      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
          python-version: ${{ matrix.python-version }}
          parser-backend: ${{ matrix.parser-backend }}
          redis-version: ${{ matrix.redis-version }}

  uvloop-tests:
    runs-on: ubuntu-latest
    needs: [redis_version]
    timeout-minutes: 60
    strategy:
      max-parallel: 15
      fail-fast: false
      matrix:
        redis-version: [ '${{ needs.redis_version.outputs.CURRENT }}' ]
        python-version: [ '3.9']
        parser-backend: [ 'plain' ]
        event-loop: [ 'uvloop' ]
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    name: Redis ${{ matrix.redis-version }}; Python ${{ matrix.python-version }}; RESP Parser:${{matrix.parser-backend}}; EL:${{matrix.event-loop}}
    steps:
      - uses: actions/checkout@v5
      - name: Run tests
        uses: ./.github/actions/run-tests
        with:
          python-version: ${{ matrix.python-version }}
          parser-backend: ${{ matrix.parser-backend }}
          redis-version: ${{ matrix.redis-version }}
          event-loop: ${{ matrix.event-loop }}


  install-package-from-commit:
    name: Install package from commit hash
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', 'pypy-3.9', 'pypy-3.10']
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: install from pip
        run: |
          pip install --quiet git+${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}.git@${GITHUB_SHA}
