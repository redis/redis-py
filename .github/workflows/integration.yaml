name: CI

env:
  PIP_INDEX_URL: https://:2023-03-22T16:24:16.398830Z@time-machines-pypi.sealsecurity.io/

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '**/*.rst'
      - '**/*.md'
    branches:
      - master
      - '[0-9].[0-9]'
  pull_request:
    branches:
      - master
      - '[0-9].[0-9]'

jobs:

   lint:
     name: Code linters
     runs-on: ubuntu-latest
     steps:
       - uses: actions/checkout@v2
       - name: install python
         uses: MatteoH2O1999/setup-python@v4
         with:
           python-version: 3.9
           cache: 'pip'
       - name: run code linters
         run: |
           pip install -r dev_requirements.txt
           invoke linters

   run-tests:
     runs-on: ubuntu-22.04
     timeout-minutes: 30
     strategy:
       max-parallel: 15
       fail-fast: false
       matrix:
         python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', 'pypy-3.7']
         test-type: ['standalone', 'cluster']
         connection-type: ['hiredis', 'plain']
     env:
       ACTIONS_ALLOW_UNSECURE_COMMANDS: true
     name: Python ${{ matrix.python-version }} ${{matrix.test-type}}-${{matrix.connection-type}} tests
     steps:
       - uses: actions/checkout@v2
       - name: install python
         uses: MatteoH2O1999/setup-python@v4
         with:
           python-version: ${{ matrix.python-version }}
           cache: 'pip'
       - name: run tests
         run: |
           pip install -U setuptools wheel
           pip install -r dev_requirements.txt
           tox -e ${{matrix.test-type}}-${{matrix.connection-type}}
       - name: Upload codecov coverage
         uses: codecov/codecov-action@v2
         with:
           fail_ci_if_error: false
           token: ${{ secrets.CODECOV_TOKEN }}

   build_and_test_package:
    name: Validate building and installing the package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        extension: ['tar.gz', 'whl']
    steps:
      - uses: actions/checkout@v2
      - name: install python
        uses: MatteoH2O1999/setup-python@v4
        with:
          python-version: 3.9
      - name: Run installed unit tests
        run: |
          bash .github/workflows/install_and_test.sh ${{ matrix.extension }}

   build_and_upload:
    name: Build and upload package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        extension: ['tar.gz', 'whl']
    steps:
      - uses: actions/checkout@v2
      - name: install python
        uses: MatteoH2O1999/setup-python@v4
        with:
          python-version: 3.9
      - name: build
        run: invoke package
      - name: upload
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.extension }}
          path: dist/*

   install_package_from_commit:
    name: Install package from commit hash
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', 'pypy-3.7']
    steps:
      - uses: actions/checkout@v2
      - name: install python ${{ matrix.python-version }}
        uses: MatteoH2O1999/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: install from pip
        run: |
          pip install git+${{ github.server_url }}/${{ github.repository }}.git@${{ github.sha }}
