[pytest]
addopts = -s
markers =
    redismod: run only the redis module tests
    pipeline: pipeline tests
    onlycluster: marks tests to be run only with cluster mode redis
    onlynoncluster: marks tests to be run only with standalone redis
    ssl: marker for only the ssl tests
    asyncio: marker for async tests
    replica: replica tests
    experimental: run only experimental tests
asyncio_mode = auto

[tox]
minversion = 3.2.0
requires = tox-docker
envlist = {standalone,cluster}-{plain,hiredis,ocsp}-{uvloop,asyncio}-{resp3},linters,docs

[isort]
profile = black
multi_line_output = 3

[testenv]
deps =
    -r {toxinidir}/requirements.txt
    -r {toxinidir}/dev_requirements.txt
extras =
    hiredis: hiredis
    ocsp: cryptography, pyopenssl, requests
setenv =
    CLUSTER_URL = "redis://localhost:16379/0"
commands =
    standalone: pytest --cov=./ --cov-report=xml:coverage_redis.xml -W always -m 'not onlycluster' --junit-xml=standalone-results.xml {posargs}
    standalone-uvloop: pytest --cov=./ --cov-report=xml:coverage_redis.xml -W always -m 'not onlycluster' --junit-xml=standalone-uvloop-results.xml --uvloop {posargs}
    cluster: pytest --cov=./ --cov-report=xml:coverage_clusteclient.xml -W always -m 'not onlynoncluster and not redismod' --redis-url={env:CLUSTER_URL:} --junit-xml=cluster-results.xml {posargs}
    cluster-uvloop: pytest --cov=./ --cov-report=xml:coverage_cluster.xml -W always -m 'not onlynoncluster and not redismod' --redis-url={env:CLUSTER_URL:} --junit-xml=cluster-uvloop-results.xml --uvloop {posargs}

[testenv:resp3]
commands =
    standalone: pytest --cov=./ --cov-report=xml:coverage_redis.xml -W always -m 'not onlycluster' --protocol=3 --junit-xml=standalone-results.xml {posargs}
    standalone-uvloop: pytest --cov=./ --cov-report=xml:coverage_redis.xml -W always -m 'not onlycluster' --protocol=3 --junit-xml=standalone-uvloop-results.xml --uvloop {posargs}
    cluster: pytest --cov=./ --cov-report=xml:coverage_clusteclient.xml -W always -m 'not onlynoncluster and not redismod' --redis-url={env:CLUSTER_URL:} --protocol=3 --junit-xml=cluster-results.xml {posargs}
    cluster-uvloop: pytest --cov=./ --cov-report=xml:coverage_cluster.xml -W always -m 'not onlynoncluster and not redismod' --redis-url={env:CLUSTER_URL:} --protocol=3 --junit-xml=cluster-uvloop-results.xml --uvloop {posargs}

[testenv:linters]
deps_files = dev_requirements.txt
docker =
commands =
    flake8
    black --target-version py37 --check --diff .
    isort --check-only --diff .
    vulture redis whitelist.py --min-confidence 80
    flynt --fail-on-change --dry-run .
skipsdist = true
skip_install = true

[testenv:docs]
deps = -r docs/requirements.txt
docker =
changedir = {toxinidir}/docs
allowlist_externals = make
commands = make html

[flake8]
max-line-length = 88
exclude =
    *.egg-info,
    *.pyc,
    .git,
    .tox,
    .venv*,
    build,
    docs/*,
    dist,
    docker,
    venv*,
    .venv*,
    whitelist.py
ignore =
    F405
    W503
    E203
    E126
