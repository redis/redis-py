[pytest]
addopts = -s
markers =
    json: run only the redisjson module tests

[tox]
minversion = 3.2.0
requires = tox-docker
envlist = {py35,py36,py37,py38,py39,pypy3}-{plain,hiredis}, flake8

[docker:master]
name = master
image = redisfab/redis-py:6.2.6-buster
ports =
    6379:6379/tcp
healtcheck_cmd = python -c "import socket;print(True) if 0 == socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect_ex(('127.0.0.1',6379)) else False"
volumes =
    bind:rw:{toxinidir}/docker/master/redis.conf:/redis.conf

[docker:replica]
name = replica
image = redisfab/redis-py:6.2.6-buster
links =
    master:master
ports =
    6380:6380/tcp
healtcheck_cmd = python -c "import socket;print(True) if 0 == socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect_ex(('127.0.0.1',6380)) else False"
volumes =
    bind:rw:{toxinidir}/docker/replica/redis.conf:/redis.conf

[docker:sentinel_1]
name = sentinel_1
image = redisfab/redis-py-sentinel:6.2.6-buster
links =
    master:master
ports =
    26379:26379/tcp
healtcheck_cmd = python -c "import socket;print(True) if 0 == socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect_ex(('127.0.0.1',26379)) else False"
volumes =
    bind:rw:{toxinidir}/docker/sentinel_1/sentinel.conf:/sentinel.conf

[docker:sentinel_2]
name = sentinel_2
image = redisfab/redis-py-sentinel:6.2.6-buster
links =
    master:master
ports =
    26380:26380/tcp
healtcheck_cmd = python -c "import socket;print(True) if 0 == socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect_ex(('127.0.0.1',26380)) else False"
volumes =
    bind:rw:{toxinidir}/docker/sentinel_2/sentinel.conf:/sentinel.conf

[docker:sentinel_3]
name = sentinel_3
image = redisfab/redis-py-sentinel:6.2.6-buster
links =
    master:master
ports =
    26381:26381/tcp
healtcheck_cmd = python -c "import socket;print(True) if 0 == socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect_ex(('127.0.0.1',26381)) else False"
volumes =
    bind:rw:{toxinidir}/docker/sentinel_3/sentinel.conf:/sentinel.conf

[docker:redismod]
name = redismod
image = redislabs/redismod:edge
ports =
    36379:6379/tcp
healtcheck_cmd = python -c "import socket;print(True) if 0 == socket.socket(socket.AF_INET, socket.SOCK_STREAM).connect_ex(('127.0.0.1',36379)) else False"

[docker:lots-of-pythons]
name = lots-of-pythons
image = redisfab/lots-of-pythons
volumes =
    bind:rw:{toxinidir}:/data

[testenv]
deps = -r {toxinidir}/dev_requirements.txt
docker =
    master
    replica
    sentinel_1
    sentinel_2
    sentinel_3
    redismod
extras =
    hiredis: hiredis
commands =
    pytest -W always {posargs}

[testenv:devenv]
skipsdist = true
skip_install = true
deps = -r {toxinidir}/dev_requirements.txt
docker =
    master
    replica
    sentinel_1
    sentinel_2
    sentinel_3
    redismod
    lots-of-pythons
commands = /usr/bin/echo

[testenv:flake8]
deps_files = dev_requirements.txt
commands = flake8
skipsdist = true
skip_install = true

[testenv:pypy3-plain]
basepython = pypy3

[testenv:pypy3-hiredis]
basepython = pypy3

#[testenv:codecov]
#deps = codecov
#commands = codecov
#passenv =
#  REDIS_*
#  CI
#  CI_*
#  CODECOV_*
#  SHIPPABLE
#  GITHUB_*
#  VCS_*
#
#[testenv:covreport]
#deps = coverage
#commands = coverage report
