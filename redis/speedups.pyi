from typing import Iterable, List, Tuple

from redis.typing import EncodableT, EncodedT

class KeySlotter:
    def __init__(self, encoding: str, errors: str) -> None: ...
    def key_slot(self, key: EncodableT) -> int: ...

class CommandPacker:
    def __init__(self, encoding: str, errors: str) -> None: ...
    def pack_command(self, args: Tuple[EncodableT, ...]) -> List[EncodedT]: ...
    def pack_commands(
        self, commands: Iterable[Tuple[EncodableT, ...]]
    ) -> List[EncodedT]: ...
